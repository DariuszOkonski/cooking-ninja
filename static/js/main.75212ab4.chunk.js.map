{"version":3,"sources":["context/ThemeContext.jsx","hooks/useTheme.js","components/Searchbar.jsx","components/Navbar.jsx","firebase/config.js","pages/create/Create.jsx","assets/trashcan.svg","components/RecipeList.jsx","pages/home/Home.jsx","pages/recipe/Recipe.jsx","pages/search/Search.jsx","hooks/useFetch.js","assets/mode-icon.svg","components/ThemeSelector.jsx","App.js","index.js"],"names":["ThemeContext","createContext","themeReducer","state","action","type","color","payload","mode","ThemeProvider","children","useReducer","dispatch","Provider","value","changeColor","changeMode","useTheme","context","useContext","undefined","Error","Searchbar","useState","term","setTerm","history","useHistory","className","onSubmit","e","preventDefault","push","htmlFor","id","onChange","target","Navbar","style","background","to","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","projectFirestore","firestore","Create","title","setTitle","method","setMethod","cookingTime","setCookingTime","newIngredient","setNewIngredient","ingredients","setIngredients","ingredinetInput","useRef","handleSubmit","a","doc","collection","add","console","log","message","required","ref","onClick","ing","trim","includes","prevIngredients","current","focus","map","i","RecipeList","recipes","length","recipe","substring","src","Trashcan","alt","delete","Home","data","setData","isPending","setIsPending","error","setError","useEffect","unsub","onSnapshot","snapshot","empty","results","docs","forEach","err","Recipe","useParams","setRecipe","snapShot","exists","update","Search","search","useLocation","query","URLSearchParams","get","url","options","setOptions","postData","headers","body","JSON","stringify","controller","AbortController","fetchData","fetchOptions","fetch","signal","res","ok","statusText","json","name","abort","useFetch","themeColors","ThemeSelector","modeIcon","filter","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iaAEaA,EAAeC,0BAEtBC,EAAe,SAACC,EAAOC,GACzB,OAAQA,EAAOC,MACX,IAAK,eACD,OAAO,2BAAIF,GAAX,IAAkBG,MAAOF,EAAOG,UACpC,IAAK,cACD,OAAO,2BAAIJ,GAAX,IAAkBK,KAAMJ,EAAOG,UACnC,QACI,OAAOJ,IAIZ,SAASM,EAAT,GAAsC,IAAbC,EAAY,EAAZA,SAC5B,EAA0BC,qBAAWT,EAAc,CAC/CI,MAAO,UACPE,KAAM,UAFV,mBAAOL,EAAP,KAAcS,EAAd,KAaA,OACI,cAACZ,EAAaa,SAAd,CAAuBC,MAAK,2BAAOX,GAAP,IAAcY,YAT1B,SAACT,GACjBM,EAAS,CAAEP,KAAM,eAAgBE,QAASD,KAQaU,WALxC,SAACR,GAChBI,EAAS,CAACP,KAAM,cAAeE,QAASC,OAIxC,SACME,IC5BP,IAAMO,EAAW,WACpB,IAAMC,EAAUC,qBAAWnB,GAE3B,QAAeoB,IAAZF,EACC,MAAM,IAAIG,MAAM,kDAGpB,OAAOH,G,YCNI,SAASI,IACpB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACMC,EAAUC,cAWhB,OACI,qBAAKC,UAAU,YAAf,SACI,uBAAMC,SAVO,SAACC,GAClBA,EAAEC,iBAEFL,EAAQM,KAAR,oBAA0BR,IAE1BC,EAAQ,KAKJ,UACI,uBAAOQ,QAAQ,SAAf,qBACA,uBACI5B,KAAK,OACL6B,GAAG,SACHC,SAAU,SAACL,GAAD,OAAOL,EAAQK,EAAEM,OAAOtB,QAClCA,MAAOU,SCpBZ,SAASa,IAEtB,MAA+BpB,IAAvBX,EAAR,EAAQA,MAAR,EAAeS,YAEf,OACI,qBAAKa,UAAU,SAASU,MAAO,CAAEC,WAAYjC,GAA7C,SACI,gCACI,cAAC,IAAD,CAAMkC,GAAG,IAAIZ,UAAU,QAAvB,SACE,iDAGL,cAAC,EAAD,IAEG,cAAC,IAAD,CAAMY,GAAG,UAAT,gC,mDCLdC,IAASC,cAVc,CACnBC,OAAQ,0CACRC,WAAY,2CACZC,UAAW,2BACXC,cAAe,uCACfC,kBAAmB,eACnBC,MAAO,8CAOX,IAAMC,EAAmBR,IAASS,Y,MCTnB,SAASC,IAGtB,MAA0B5B,mBAAS,IAAnC,mBAAO6B,EAAP,KAAcC,EAAd,KACA,EAA4B9B,mBAAS,IAArC,mBAAO+B,EAAP,KAAeC,EAAf,KACA,EAAsChC,mBAAS,IAA/C,mBAAOiC,EAAP,KAAoBC,EAApB,KACA,EAA0ClC,mBAAS,IAAnD,mBAAOmC,EAAP,KAAsBC,EAAtB,KACA,EAAsCpC,mBAAS,IAA/C,mBAAOqC,EAAP,KAAoBC,EAApB,KACMC,EAAkBC,iBAAO,MACzBrC,EAAUC,cAEVqC,EAAY,uCAAG,WAAOlC,GAAP,eAAAmC,EAAA,6DACjBnC,EAAEC,iBAGImC,EAAM,CAAEd,QAAOQ,cAAaN,SAAQE,YAAaA,EAAc,YAJpD,kBAOTP,EAAiBkB,WAAW,WAAWC,IAAIF,GAPlC,OAQfxC,EAAQM,KAAK,KARE,gDAUfqC,QAAQC,IAAI,KAAMC,SAVH,yDAAH,sDA2BlB,OACI,sBAAK3C,UAAU,SAAf,UACE,oBAAIA,UAAU,aAAd,8BAEA,uBAAMC,SAAUmC,EAAhB,UAEE,kCACE,iDACA,uBACE3D,KAAK,OACL8B,SAAU,SAACL,GAAD,OAAOuB,EAASvB,EAAEM,OAAOtB,QACnCA,MAAOsC,EACPoB,UAAQ,OAIZ,kCACI,uDACA,sBAAK5C,UAAU,cAAf,UACI,uBACEvB,KAAK,OACL8B,SAAU,SAACL,GAAD,OAAO6B,EAAiB7B,EAAEM,OAAOtB,QAC3CA,MAAO4C,EACPe,IAAKX,IAEP,wBAAQY,QArCN,SAAC5C,GACfA,EAAEC,iBACF,IAAM4C,EAAMjB,EAAckB,OAEvBD,IAAQf,EAAYiB,SAASF,IAC5Bd,GAAe,SAAAiB,GAAe,4BAAQA,GAAR,CAAyBH,OAG3DhB,EAAiB,IACjBG,EAAgBiB,QAAQC,SA4BgBpD,UAAU,MAAtC,uBAIR,8BACI,0DACCgC,EAAYqB,KAAI,SAAAC,GAAC,OAAI,+BAAaA,EAAb,OAASA,SAKnC,kCACE,kDACA,0BACE/C,SAAU,SAACL,GAAD,OAAOyB,EAAUzB,EAAEM,OAAOtB,QACpCA,MAAOwC,EACPkB,UAAQ,OAIZ,kCACE,2DACA,uBACEnE,KAAK,SACL8B,SAAU,SAACL,GAAD,OAAO2B,EAAe3B,EAAEM,OAAOtB,QACzCA,MAAO0C,EACPgB,UAAQ,OAIZ,wBAAQ5C,UAAU,MAAlB,0B,UCpGK,MAA0B,qCCM1B,SAASuD,EAAT,GAAkC,IAAZC,EAAW,EAAXA,QAEzB5E,EAASS,IAATT,KAER,GAAsB,IAAnB4E,EAAQC,OACP,OAAO,qBAAKzD,UAAU,QAAf,mCAQX,OACI,qBAAKA,UAAU,cAAf,SAEQwD,EAAQH,KAAI,SAAAK,GAAM,OACd,sBAAqB1D,UAAS,eAAUpB,GAAxC,UACI,6BAAK8E,EAAOlC,QACZ,8BAAIkC,EAAO9B,YAAX,cACA,gCAAM8B,EAAOhC,OAAOiC,UAAU,EAAG,KAAjC,SACA,cAAC,IAAD,CAAM/C,GAAE,mBAAc8C,EAAOpD,IAA7B,0BACA,qBACIN,UAAU,SACV4D,IAAKC,EACLC,IAAI,SACJhB,QAAS,kBAlBZxC,EAkB8BoD,EAAOpD,QAjBtDe,EAAiBkB,WAAW,WAAWD,IAAIhC,GAAIyD,SAD/B,IAACzD,OASKoD,EAAOpD,S,MChBtB,SAAS0D,IAEpB,MAAwBrE,mBAAS,MAAjC,mBAAOsE,EAAP,KAAaC,EAAb,KACA,EAAkCvE,oBAAS,GAA3C,mBAAOwE,EAAP,KAAkBC,EAAlB,KACA,EAA0BzE,oBAAS,GAAnC,mBAAO0E,EAAP,KAAcC,EAAd,KA2BA,OAzBAC,qBAAU,WACNH,GAAa,GAEb,IAAMI,EAAQnD,EAAiBkB,WAAW,WAAWkC,YAAW,SAACC,GACzD,GAAGA,EAASC,MACRL,EAAS,sBACTH,GAAU,OACP,CACH,IAAIS,EAAU,GACdF,EAASG,KAAKC,SAAQ,SAAAxC,GAClBsC,EAAQxE,KAAR,aAAcE,GAAIgC,EAAIhC,IAAOgC,EAAI2B,YAGrCC,EAAQU,GACRR,GAAa,OAElB,SAACW,GACAT,EAASS,EAAIpC,SACbyB,GAAa,MAGjB,OAAO,kBAAMI,OAClB,IAIC,sBAAKxE,UAAU,OAAf,UACMqE,GAAS,mBAAGrE,UAAU,QAAb,SAAsBqE,IAC/BF,GAAa,mBAAGnE,UAAU,UAAb,wBACbiE,GAAQ,cAAC,EAAD,CAAYT,QAASS,O,MCnC5B,SAASe,IACpB,IAAQ1E,EAAO2E,cAAP3E,GACA1B,EAASS,IAATT,KACR,EAA4Be,mBAAS,MAArC,mBAAO+D,EAAP,KAAewB,EAAf,KACA,EAAkCvF,oBAAS,GAA3C,mBAAOwE,EAAP,KAAkBC,EAAlB,KACA,EAA0BzE,oBAAS,GAAnC,mBAAO0E,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WAENH,GAAa,GAEb,IAAMI,EAAQnD,EAAiBkB,WAAW,WAAWD,IAAIhC,GAAImE,YAAW,SAACU,GAC9DA,EAASC,QACRhB,GAAa,GACbc,EAAUC,EAASlB,UAEnBG,GAAa,GACbE,EAAS,kCAEd,SAACS,GACAtC,QAAQC,IAAIqC,EAAIpC,YAGpB,OAAO,kBAAM6B,OAElB,CAAClE,IASJ,OACI,sBAAKN,UAAS,iBAAYpB,GAA1B,UACMyF,GAAS,mBAAGrE,UAAU,QAAb,SAAsBqE,IAC/BF,GAAa,mBAAGnE,UAAU,UAAb,wBAGX0D,GACI,qCACI,oBAAI1D,UAAU,aAAd,SAA4B0D,EAAOlC,QACnC,uCAAUkC,EAAO9B,YAAjB,eACA,6BAEQ8B,EAAO1B,YAAYqB,KAAI,SAAAN,GAAG,OAAI,6BAAeA,GAANA,QAG/C,mBAAG/C,UAAU,SAAb,SAAuB0D,EAAOhC,SAC9B,wBAAQoB,QAvBR,WAChBzB,EAAiBkB,WAAW,WAAWD,IAAIhC,GAAI+E,OAAO,CAClD7D,MAAO,oCAqBK,6B,MCpDT,SAAS8D,IAEpB,IAAQC,EAAWC,cAAXD,OAEFE,EADc,IAAIC,gBAAgBH,GACdI,IAAI,KAG9B,ECVW,SAAkBC,GAAsB,IAAjBlE,EAAgB,uDAAP,MAC3C,EAAwB/B,mBAAS,MAAjC,mBAAOsE,EAAP,KAAaC,EAAb,KACA,EAAkCvE,oBAAS,GAA3C,mBAAOwE,EAAP,KAAkBC,EAAlB,KACA,EAA0BzE,mBAAS,MAAnC,mBAAO0E,EAAP,KAAcC,EAAd,KACA,EAA8B3E,mBAAS,MAAvC,mBAAOkG,EAAP,KAAgBC,EAAhB,KAEMC,EAAW,SAACA,GACdD,EAAW,CACPpE,OAAQ,OACRsE,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUJ,MAgD7B,OA5CAxB,qBAAU,WACR,IAAM6B,EAAa,IAAIC,gBAEjBC,EAAS,uCAAG,WAAOC,GAAP,iBAAAlE,EAAA,6DACd+B,GAAa,GADC,kBAIMoC,MAAMZ,EAAD,YAAC,eACjBW,GADgB,IAEnBE,OAAQL,EAAWK,UANX,WAINC,EAJM,QASJC,GATI,sBAUF,IAAIlH,MAAMiH,EAAIE,YAVZ,uBAYOF,EAAIG,OAZX,OAYN5C,EAZM,OAcZG,GAAa,GACbF,EAAQD,GACRK,EAAS,MAhBG,kDAmBI,eAAb,KAAIwC,KACHrE,QAAQC,IAAI,0BAEZ0B,GAAa,GACbE,EAAS,6BAvBD,0DAAH,sDAoCf,MARc,QAAX5C,GACC4E,IAGU,SAAX5E,GAAqBmE,GACpBS,EAAUT,GAGP,WACLO,EAAWW,WAEZ,CAACnB,EAAKC,EAASnE,IAEX,CAAEuC,OAAME,YAAWE,QAAO0B,YDlDEiB,CADvB,mCAAqCvB,GACzCpB,EAAR,EAAQA,MAAOF,EAAf,EAAeA,UAAWF,EAA1B,EAA0BA,KAG1B,OACI,gCACI,qBAAIjE,UAAU,aAAd,gCAA+CyF,EAA/C,OACEpB,GAAS,mBAAGrE,UAAU,QAAb,SAAsBqE,IAC/BF,GAAa,mBAAGnE,UAAU,UAAb,wBAEbiE,GAAQ,cAAC,EAAD,CAAYT,QAASS,O,gBErB5B,MAA0B,sCCMnCgD,EAAc,CAAC,UAAW,UAAW,WAE5B,SAASC,IACpB,MAAwC7H,IAAjCF,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,WAAYR,EAAhC,EAAgCA,KAMhC,OACE,sBAAKoB,UAAU,iBAAf,UACI,qBAAKA,UAAU,cAAf,SACE,qBACI8C,QARO,WACf1D,EAAoB,SAATR,EAAkB,QAAU,SAQ/BgF,IAAKuD,EACLrD,IAAI,yBACJpD,MAAO,CAAE0G,OAAiB,SAATxI,EAAkB,eAAiB,mBAI1D,qBAAKoB,UAAU,gBAAf,SAEQiH,EAAY5D,KAAI,SAAA3E,GAAK,OACnB,qBAEIoE,QAAS,kBAAM3D,EAAYT,IAC3BgC,MAAO,CAAEC,WAAYjC,IAFhBA,WCad2I,MA/Bf,WACE,IAAQzI,EAASS,IAATT,KAER,OACE,qBAAKoB,UAAS,cAASpB,GAAvB,SACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,IAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO0I,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOA,KAAK,UAAZ,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOA,KAAK,UAAZ,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOA,KAAK,eAAZ,SACE,cAAC,EAAD,eC7BZC,IAASC,OACP,cAAC,IAAMC,WAAP,UAEE,cAAC7I,EAAD,UACE,cAAC,EAAD,QAIJ8I,SAASC,eAAe,W","file":"static/js/main.75212ab4.chunk.js","sourcesContent":["import { createContext, useReducer } from \"react\";\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst themeReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'CHANGE_COLOR':\r\n            return {...state, color: action.payload};\r\n        case 'CHANGE_MODE':\r\n            return {...state, mode: action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport function ThemeProvider({ children }) {    \r\n    const [state, dispatch] = useReducer(themeReducer, {\r\n        color: '#58249c',\r\n        mode: 'light'\r\n    });\r\n\r\n    const changeColor = (color) => {\r\n        dispatch({ type: 'CHANGE_COLOR', payload: color })\r\n    }\r\n\r\n    const changeMode = (mode) => {\r\n        dispatch({type: 'CHANGE_MODE', payload: mode})\r\n    }\r\n\r\n    return (\r\n        <ThemeContext.Provider value={ {...state, changeColor, changeMode} }>\r\n            { children }\r\n        </ThemeContext.Provider>\r\n    );\r\n}","import  { useContext } from 'react';\r\nimport { ThemeContext } from '../context/ThemeContext';\r\n\r\nexport const useTheme = () => {\r\n    const context = useContext(ThemeContext);\r\n\r\n    if(context === undefined) {\r\n        throw new Error(\"useTheme() must be used inside a ThemeProvider\");\r\n    }\r\n\r\n    return context;\r\n}\r\n","import { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './Searchbar.css';\r\n\r\nexport default function Searchbar() {\r\n    const [term, setTerm] = useState('');  \r\n    const history = useHistory();\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        history.push(`/search?q=${term}`);\r\n\r\n        setTerm('')\r\n    }\r\n\r\n    return (\r\n        <div className='searchbar'>\r\n            <form onSubmit={handleSubmit}>\r\n                <label htmlFor=\"search\">Search:</label>\r\n                <input \r\n                    type=\"text\" \r\n                    id='search'\r\n                    onChange={(e) => setTerm(e.target.value)}\r\n                    value={term}\r\n                />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import { Link } from 'react-router-dom';\r\nimport { useTheme } from '../hooks/useTheme';\r\nimport './Navbar.css';\r\nimport Searchbar from './Searchbar';\r\n\r\nexport default function Navbar() {\r\n\r\n  const { color, changeColor } = useTheme();\r\n\r\n  return (\r\n      <div className=\"navbar\" style={{ background: color }}>\r\n          <nav>\r\n              <Link to=\"/\" className='brand'>\r\n                <h1>Cooking Ninja</h1>\r\n              </Link>\r\n\t\t\t  \r\n\t\t\t        <Searchbar />\t\t\r\n\r\n              <Link to=\"/create\">\r\n                Create Recipe\r\n              </Link>\r\n          </nav>\r\n      </div>\r\n  );\r\n}","import firebase from \"firebase/app\";\r\nimport 'firebase/firestore'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBUD9KeSe3_ko0ma2cqgKiUTZY1oRrRTS8\",\r\n    authDomain: \"cooking-ninja-site-1bf00.firebaseapp.com\",\r\n    projectId: \"cooking-ninja-site-1bf00\",\r\n    storageBucket: \"cooking-ninja-site-1bf00.appspot.com\",\r\n    messagingSenderId: \"982427229464\",\r\n    appId: \"1:982427229464:web:90cc47c87dd59df998526d\"\r\n};\r\n\r\n// init firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// init services\r\nconst projectFirestore = firebase.firestore();\r\n\r\nexport {\r\n    projectFirestore\r\n}","import { useEffect, useRef, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { projectFirestore } from '../../firebase/config';\r\nimport useFetch from '../../hooks/useFetch';\r\nimport './Create.css';\r\n\r\n\r\nexport default function Create() {\r\n  // const { postData, data, error } = useFetch('http://localhost:3000/recipes', \"POST\");\r\n  \r\n  const [title, setTitle] = useState('');\r\n  const [method, setMethod] = useState('');\r\n  const [cookingTime, setCookingTime] = useState('');\r\n  const [newIngredient, setNewIngredient] = useState('');\r\n  const [ingredients, setIngredients] = useState([]);\r\n  const ingredinetInput = useRef(null);\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n\r\n      // const doc = { title, ingredients, method, cookingTime: cookingTime + ' minutes'};\r\n      const doc = { title, ingredients, method, cookingTime: cookingTime + ' minutes'};\r\n\r\n      try {\r\n        await projectFirestore.collection('recipes').add(doc); \r\n        history.push('/');       \r\n      } catch (error) {\r\n        console.log(error.message)\r\n      }\r\n        \r\n  }\r\n\r\n  const handleAdd = (e) => {\r\n      e.preventDefault();\r\n      const ing = newIngredient.trim();\r\n\r\n      if(ing && !ingredients.includes(ing)) {\r\n          setIngredients(prevIngredients => [...prevIngredients, ing])\r\n      }\r\n\r\n      setNewIngredient('');\r\n      ingredinetInput.current.focus();\r\n  }\r\n\r\n  return (\r\n      <div className='create'>\r\n        <h2 className='page-title'>Add a New Recipe</h2>\r\n\r\n        <form onSubmit={handleSubmit}>\r\n\r\n          <label>\r\n            <span>Recipe title:</span>\r\n            <input \r\n              type=\"text\" \r\n              onChange={(e) => setTitle(e.target.value)}\r\n              value={title}\r\n              required\r\n            />\r\n          </label>\r\n\r\n          <label>\r\n              <span>Recipe ingredients:</span>\r\n              <div className=\"ingredients\">\r\n                  <input \r\n                    type=\"text\" \r\n                    onChange={(e) => setNewIngredient(e.target.value)}\r\n                    value={newIngredient}\r\n                    ref={ingredinetInput}\r\n                  />\r\n                  <button onClick={handleAdd} className=\"btn\">add</button>\r\n              </div>\r\n          </label>\r\n\r\n          <p>\r\n              <strong>Current ingredients:</strong> \r\n              {ingredients.map(i => <em key={i}>{i}, </em>)}\r\n          </p>\r\n\r\n        \r\n\r\n          <label>\r\n            <span>Recipe method:</span>\r\n            <textarea \r\n              onChange={(e) => setMethod(e.target.value)}\r\n              value={method}\r\n              required\r\n            />\r\n          </label>\r\n\r\n          <label>\r\n            <span>Cooking time (minutes):</span>\r\n            <input \r\n              type=\"number\"\r\n              onChange={(e) => setCookingTime(e.target.value)}\r\n              value={cookingTime}\r\n              required\r\n            />\r\n          </label>\r\n\r\n          <button className=\"btn\">Submit</button>\r\n        </form>\r\n      </div>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/trashcan.1129c53a.svg\";","import { Link } from 'react-router-dom';\r\nimport { useTheme } from '../hooks/useTheme';\r\nimport './RecipeList.css';\r\nimport Trashcan from '../assets/trashcan.svg';\r\nimport { projectFirestore } from '../firebase/config';\r\n\r\nexport default function RecipeList({ recipes }) {\r\n    \r\n    const { mode } = useTheme();\r\n\r\n    if(recipes.length === 0) {\r\n        return <div className='error'>No recipes to load...</div>\r\n    }\r\n\r\n    const handleClick = (id) => {\r\n        projectFirestore.collection('recipes').doc(id).delete();\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className='recipe-list'>\r\n            {\r\n                recipes.map(recipe => (\r\n                    <div key={recipe.id} className={`card ${mode}`}>\r\n                        <h3>{recipe.title}</h3>\r\n                        <p>{recipe.cookingTime} to make</p>\r\n                        <div>{recipe.method.substring(0, 100)}...</div>\r\n                        <Link to={`/recipes/${recipe.id}`}>Cook this...</Link>\r\n                        <img\r\n                            className='delete' \r\n                            src={Trashcan} \r\n                            alt=\"delete\"\r\n                            onClick={() => handleClick(recipe.id)} \r\n                        />\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import RecipeList from '../../components/RecipeList';\r\nimport { projectFirestore } from '../../firebase/config';\r\n// import useFetch from './../../hooks/useFetch';\r\nimport './Home.css';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\n\r\nexport default function Home() {\r\n    // const { data, isPending, error } = useFetch('http://localhost:3000/recipes')\r\n    const [data, setData] = useState(null);\r\n    const [isPending, setIsPending] = useState(false);\r\n    const [error, setError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setIsPending(true);\r\n\r\n        const unsub = projectFirestore.collection('recipes').onSnapshot((snapshot) => {\r\n                if(snapshot.empty) {\r\n                    setError('No recipes to load');\r\n                    isPending(false);\r\n                } else {\r\n                    let results = [];\r\n                    snapshot.docs.forEach(doc => {\r\n                        results.push({id: doc.id, ...doc.data()})\r\n                    })\r\n\r\n                    setData(results);\r\n                    setIsPending(false);\r\n                }\r\n            }, (err) => {\r\n                setError(err.message);\r\n                setIsPending(false);\r\n            });\r\n\r\n            return () => unsub();\r\n    }, [])\r\n    \r\n\r\n    return (\r\n        <div className='home'>\r\n            { error && <p className='error'>{error}</p>}\r\n            { isPending && <p className='loading'>Loading...</p>}\r\n            { data && <RecipeList recipes={data} /> }\r\n        </div>\r\n    );\r\n}\r\n","import { useParams } from 'react-router-dom';\r\nimport { useTheme } from '../../hooks/useTheme';\r\nimport './Recipe.css';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { projectFirestore } from '../../firebase/config';\r\n\r\nexport default function Recipe() { \r\n    const { id } = useParams();\r\n    const { mode } = useTheme();\r\n    const [recipe, setRecipe] = useState(null);\r\n    const [isPending, setIsPending] = useState(false);\r\n    const [error, setError] = useState(false);\r\n\r\n    useEffect(() => {\r\n      \r\n        setIsPending(true);\r\n\r\n        const unsub = projectFirestore.collection('recipes').doc(id).onSnapshot((snapShot) => {\r\n                if(snapShot.exists) {\r\n                    setIsPending(false);\r\n                    setRecipe(snapShot.data())\r\n                } else {\r\n                    setIsPending(false);\r\n                    setError('Could not find that recipe')\r\n                }\r\n            }, (err) => {\r\n                console.log(err.message)\r\n            })\r\n\r\n            return () => unsub();\r\n      \r\n    }, [id])\r\n    \r\n    const handleClick = () => {\r\n        projectFirestore.collection('recipes').doc(id).update({\r\n            title: 'Something completely different'\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={`recipe ${mode}`}>\r\n            { error && <p className='error'>{error}</p>}\r\n            { isPending && <p className='loading'>Loading...</p> }\r\n\r\n            {\r\n                recipe && (\r\n                    <>\r\n                        <h2 className=\"page-title\">{recipe.title}</h2>\r\n                        <p>Takes {recipe.cookingTime} to cook.</p>\r\n                        <ul>\r\n                            {\r\n                                recipe.ingredients.map(ing => <li key={ing}>{ing}</li>)\r\n                            }\r\n                        </ul>\r\n                        <p className=\"method\">{recipe.method}</p>\r\n                        <button onClick={handleClick}>Update me</button>\r\n                    </>\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","import { useLocation } from 'react-router-dom';\r\nimport RecipeList from '../../components/RecipeList';\r\nimport useFetch from '../../hooks/useFetch';\r\nimport './Search.css';\r\n\r\nexport default function Search() {\r\n\r\n    const { search } = useLocation();\r\n    const queryParams = new URLSearchParams(search)\r\n    const query = queryParams.get('q');\r\n\r\n    const url = 'http://localhost:3000/recipes?q=' + query;\r\n    const { error, isPending, data } = useFetch(url);\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <h2 className=\"page-title\">Recipes including \"{query}\"</h2>\r\n            { error && <p className='error'>{error}</p> }\r\n            { isPending && <p className='loading'>Loading...</p>}\r\n\r\n            { data && <RecipeList recipes={data} />}\r\n        </div>\r\n    );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport default function useFetch(url, method = \"GET\") {\r\n    const [data, setData] = useState(null);\r\n    const [isPending, setIsPending] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [options, setOptions] = useState(null);\r\n\r\n    const postData = (postData) => {\r\n        setOptions({\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(postData)\r\n        })                    \r\n    }\r\n\r\n    useEffect(() => {\r\n      const controller = new AbortController();\r\n\r\n      const fetchData = async (fetchOptions) => {\r\n          setIsPending(true);\r\n\r\n          try {\r\n            const res = await fetch(url, { \r\n                ...fetchOptions,\r\n                signal: controller.signal \r\n            })\r\n\r\n            if(!res.ok) {\r\n                throw new Error(res.statusText);\r\n            }\r\n            const data = await res.json();\r\n\r\n            setIsPending(false);\r\n            setData(data);\r\n            setError(null);\r\n\r\n          } catch(err) {\r\n            if(err.name === \"AbortError\") {\r\n                console.log(\"the fetch was aborted\");\r\n            } else {\r\n                setIsPending(false);\r\n                setError('Could not fetch the data');\r\n            }\r\n          }\r\n      }\r\n\r\n      if(method === \"GET\") {\r\n          fetchData();\r\n      }\r\n\r\n      if(method === \"POST\" && options) {\r\n          fetchData(options);        \r\n      }\r\n    \r\n      return () => {\r\n        controller.abort();\r\n      };\r\n    }, [url, options, method]);\r\n    \r\n    return { data, isPending, error, postData };\r\n}\r\n","export default __webpack_public_path__ + \"static/media/mode-icon.651cf792.svg\";","import './ThemeSelector.css';\r\nimport modeIcon from '../assets/mode-icon.svg';\r\n\r\nimport React from 'react';\r\nimport { useTheme } from './../hooks/useTheme';\r\n\r\nconst themeColors = ['#58249c', '#249c6b', '#b70233']\r\n\r\nexport default function ThemeSelector() {\r\n    const {changeColor, changeMode, mode} = useTheme();\r\n  \r\n    const toggleMode = () => {\r\n        changeMode(mode === 'dark' ? 'light' : 'dark')\r\n    }\r\n\r\n    return (\r\n      <div className='theme-selector'>\r\n          <div className=\"mode-toggle\">\r\n            <img\r\n                onClick={toggleMode}\r\n                src={modeIcon} \r\n                alt=\"dark/light toggle icon\"\r\n                style={{ filter: mode === 'dark' ? 'invert(100%)' : 'invert(20%)'}}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"theme-buttons\">\r\n              {\r\n                  themeColors.map(color => (\r\n                    <div\r\n                        key={color}\r\n                        onClick={() => changeColor(color)}\r\n                        style={{ background: color}}\r\n                    ></div>\r\n                  ))\r\n              }\r\n          </div>\r\n\r\n\r\n      </div>\r\n    )\r\n}\r\n","import { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Create from './pages/create/Create';\nimport Home from './pages/home/Home';\nimport Recipe from './pages/recipe/Recipe';\nimport Search from './pages/search/Search';\n\nimport './App.css'\nimport ThemeSelector from './components/ThemeSelector';\nimport { useTheme } from './hooks/useTheme';\n\n\nfunction App() {\n  const { mode } = useTheme();\n\n  return (\n    <div className={`App ${mode}`}>\n      <BrowserRouter>\n        <Navbar />\n        <ThemeSelector />\n\n        <Switch>          \n          <Route exact path=\"/\">\n            <Home/>\n          </Route>\n\n          <Route path=\"/create\">\n            <Create/>\n          </Route>\n\n          <Route path=\"/search\">\n            <Search/>\n          </Route>\n\n          <Route path=\"/recipes/:id\">\n            <Recipe/>\n          </Route>\n        </Switch>\n      </BrowserRouter>      \n    </div>\n  );\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { ThemeProvider } from './context/ThemeContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    \n    <ThemeProvider>\n      <App />\n    </ThemeProvider>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}